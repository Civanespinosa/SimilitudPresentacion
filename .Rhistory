remotes::install_github('yihui/xaringan', upgrade = TRUE)
xaringan::inf_mr()
moon_reader()
xarigan::moon_reader()
xaringan::moon_reader()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
background-image: url("Imagenes/AB2_0102.jpg")
xaringan::inf_mr()
xaringan::inf_mr()
.pull-left[
<img src="Imagenes/Comunidad.png" width="450" height="450" />
xaringan::inf_mr()
grViz("
digraph boxes_and_circles {
node[shape = circle, fillcolor= grey,fontsize = 12, fixedsize = true,
width = 0.9]
graph[rankdir=LR, overlap = true]
seed;small;big
seed->small[label='P_21',fontsize = 8]; small->big [label='P_32',fontsize = 8]; big->seed[label='F3',fontsize = 8]; small->seed[label='F2',fontsize = 8]; big->big [label='P_33',fontsize = 8]
}
")
nodes <-
create_nodes(nodes = c("a", "b", "c"),
label = c("seed", "small", "big"),
type = "LR",
style = "filled",
color = "grey",
shape = "circle",
data = c(3.5, 2.6, 9.4, 2.7))
edges <-
create_edges(from = c("a", "b", "c", "b", "c"),
to = c("b", "c", "c", "a", "a"),
relationship = "leading_to",
label=c("P21", "P31", "P33","F2","F3"))
graph <-
create_graph(nodes_df = nodes,
edges_df = edges,
graph_attrs= "rankdir=LR, outputorder = edgesfirst",
node_attrs = "fontname = Helvetica, fixedsize = true,
width = 0.6, fontsize=10",
edge_attrs = c("color = black",
"arrowsize = 0.8" , "fontsize = 8"))
library(DiagrammeR)
grViz("
digraph boxes_and_circles {
node[shape = circle, fillcolor= grey,fontsize = 12, fixedsize = true,
width = 0.9]
graph[rankdir=LR, overlap = true]
seed;small;big
seed->small[label='P_21',fontsize = 8]; small->big [label='P_32',fontsize = 8]; big->seed[label='F3',fontsize = 8]; small->seed[label='F2',fontsize = 8]; big->big [label='P_33',fontsize = 8]
}
")
nodes <-
create_nodes(nodes = c("a", "b", "c"),
label = c("seed", "small", "big"),
type = "LR",
style = "filled",
color = "grey",
shape = "circle",
data = c(3.5, 2.6, 9.4, 2.7))
grViz("
digraph boxes_and_circles {
node[shape = circle, fillcolor= grey,fontsize = 12, fixedsize = true,
width = 0.9]
graph[rankdir=LR, overlap = true]
seed;small;big
seed->small[label='P_21',fontsize = 8]; small->big [label='P_32',fontsize = 8]; big->seed[label='F3',fontsize = 8]; small->seed[label='F2',fontsize = 8]; big->big [label='P_33',fontsize = 8]
}
")
nodes <-
create_nodes(nodes = c("a", "b", "c"),
label = c("A", "B", "C"),
type = "LR",
style = "filled",
color = "grey",
shape = "circle",
data = c(3.5, 2.6, 2.7))
library(DiagrammeR)
nodes <-
create_nodes(nodes = c("a", "b", "c"),
label = c("A", "B", "C"),
type = "LR",
style = "filled",
color = "grey",
shape = "circle",
data = c(3.5, 2.6, 9.4, 2.7))
edges <-
create_edges(from = c("a", "b", "c", "b", "c"),
to = c("b", "c", "c", "a", "a"),
relationship = "leading_to",
label=c("P21", "P31", "P33","F2","F3"))
graph <-
create_graph(nodes_df = nodes,
edges_df = edges,
graph_attrs= "rankdir=LR, outputorder = edgesfirst",
node_attrs = "fontname = Helvetica, fixedsize = true,
width = 0.6, fontsize=10",
edge_attrs = c("color = black",
"arrowsize = 0.8" , "fontsize = 8"))
visnetwork(graph, height = 3, width = 6)
graph
library(DiagrammeR)
nodes <-
create_nodes(nodes = c("a", "b", "c"),
label = c("A", "B", "C"),
type = "LR",
style = "filled",
color = "grey",
shape = "circle",
data = c(3.5, 2.6, 9.4, 2.7))
edges <-
create_edges(from = c("a", "b", "c", "b", "c"),
to = c("b", "c", "c", "a", "a"),
relationship = "leading_to",
label=c("P21", "P31", "P33","F2","F3"))
graph <-
create_graph(nodes_df = nodes,
edges_df = edges,
graph_attrs= "rankdir=LR, outputorder = edgesfirst",
node_attrs = "fontname = Helvetica, fixedsize = true,
width = 0.6, fontsize=10",
edge_attrs = c("color = black",
"arrowsize = 0.8" , "fontsize = 8"))
visnetwork(graph, height = 3, width = 6)
graph
render_graph(graph)
library(DiagrammeR)
grViz("
digraph boxes_and_circles {
node[shape = circle, fillcolor= grey,fontsize = 12, fixedsize = true,
width = 0.9]
graph[rankdir=LR, overlap = true]
seed;small;big
seed->small[label='P_21',fontsize = 8]; small->big [label='P_32',fontsize = 8]; big->seed[label='F3',fontsize = 8]; small->seed[label='F2',fontsize = 8]; big->big [label='P_33',fontsize = 8]
}
")
grViz("
digraph boxes_and_circles {
node[shape = circle, fillcolor= grey,fontsize = 12, fixedsize = true,
width = 0.9]
graph[rankdir=LR, overlap = true]
A;B;C
A->B[]; B->C []; C->A[]
}
")
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
par(mar=c(4,4,1,1), mgp=c(1,0.3,0), tcl= -0.2)
plot(dens[,1:2], type = "n", cex.axis=0.8, xlim=c(0,20), ylim=c(0,25))
text(dens[,1:2], row.names(dens), col ="blue")
dens <- data.frame(T.bil = c(1, 1, 2, 3), G.spi = c(21, 8, 13, 5),
C.tri = c(11, 3, 7, 5), C.sca = c(16, 0, 9, 4))
row.names(dens) <- LETTERS[1:4]
dens
dens
comp
comp <- dens
comp[comp>0] <- 1 #Generamos una matriz de presencia ausencia
comp
dens
a <- sum(colSums(comp[1:2,])==1&comp[2,]==0)#Ocurren en A pero no en B
b <- sum(colSums(comp[1:2,])==1&comp[1,]==0)#Ocurren en B pero no en A
c <- sum(colSums(comp[1:2,])==2) #ocurren en A y B
a;b;c
Sor <- (2*c)/(a+b+(2*c))
Jac <- c/(a+b+c)
Sim <- c/c+min(a,b)
Sor; Jac; Sim
Sor <- (2*c)/(a+b+(2*c))
Jac <- c/(a+b+c)
Sim <- c/c+min(a,b)
Sor; Jac; Sim
comp
a <- sum(colSums(comp[1:2,])==1&comp[2,]==0)
a
comp[1:2,])==1&comp[2,]==0
comp[1:2,])==1&comp[2,]==0
colSums(comp[1:2,])
comp[2,]==0
colSums(comp[1:2,])==1
comp
---
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
plot(mdsE, display = "sites",
type = "text",main="a)Euclidiana",
cex.axis= 1, cex.main=1, cex.lab=1, cex = 2)
xaringan::inf_mr()
